{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\puinj\\\\OneDrive\\\\Desktop\\\\coh25\\\\decentralized-identity-ui\\\\src\\\\components\\\\CreateDID.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport { getContract } from '../utils/contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateDID = ({\n  signer,\n  address\n}) => {\n  _s();\n  const [did, setDid] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchDID = async () => {\n      if (signer && address) {\n        const contract = getContract(signer);\n        try {\n          const userDID = await contract.DIDs(address);\n          if (userDID) {\n            setDid(userDID);\n          }\n        } catch (error) {\n          console.error('Error fetching DID:', error);\n        }\n      }\n    };\n    fetchDID();\n  }, [signer, address]);\n  const handleCreateDID = async () => {\n    if (!signer) return;\n    setLoading(true);\n    const contract = getContract(signer);\n    try {\n      const tx = await contract.createDID();\n      await tx.wait();\n      // After creation, fetch the DID again\n      const userDID = await contract.DIDs(address);\n      setDid(userDID);\n      alert('DID created successfully.');\n    } catch (error) {\n      console.error('Error creating DID:', error);\n      alert('Failed to create DID.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      border: '1px solid #ddd',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Your Decentralized Identity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), did ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        wordBreak: 'break-all',\n        mb: 2\n      },\n      children: [\"DID: \", did]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 2\n      },\n      children: \"No DID created yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleCreateDID,\n      disabled: !!did || loading,\n      children: loading ? 'Creating...' : 'Create DID'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateDID, \"5u2clsMvG27KrRiYtj7kaWv14mQ=\");\n_c = CreateDID;\nexport default CreateDID;\nvar _c;\n$RefreshReg$(_c, \"CreateDID\");","map":{"version":3,"names":["React","useState","useEffect","Button","Typography","Box","getContract","jsxDEV","_jsxDEV","CreateDID","signer","address","_s","did","setDid","loading","setLoading","fetchDID","contract","userDID","DIDs","error","console","handleCreateDID","tx","createDID","wait","alert","sx","p","border","borderRadius","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","wordBreak","mb","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/puinj/OneDrive/Desktop/coh25/decentralized-identity-ui/src/components/CreateDID.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Typography, Box } from '@mui/material';\r\nimport { getContract } from '../utils/contract';\r\n\r\nconst CreateDID = ({ signer, address }) => {\r\n  const [did, setDid] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchDID = async () => {\r\n      if (signer && address) {\r\n        const contract = getContract(signer);\r\n        try {\r\n          const userDID = await contract.DIDs(address);\r\n          if (userDID) {\r\n            setDid(userDID);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching DID:', error);\r\n        }\r\n      }\r\n    };\r\n    fetchDID();\r\n  }, [signer, address]);\r\n\r\n  const handleCreateDID = async () => {\r\n    if (!signer) return;\r\n    setLoading(true);\r\n    const contract = getContract(signer);\r\n    try {\r\n      const tx = await contract.createDID();\r\n      await tx.wait();\r\n      // After creation, fetch the DID again\r\n      const userDID = await contract.DIDs(address);\r\n      setDid(userDID);\r\n      alert('DID created successfully.');\r\n    } catch (error) {\r\n      console.error('Error creating DID:', error);\r\n      alert('Failed to create DID.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2, border: '1px solid #ddd', borderRadius: '8px' }}>\r\n      <Typography variant=\"h6\" gutterBottom>Your Decentralized Identity</Typography>\r\n      {did ? (\r\n        <Typography variant=\"body1\" sx={{ wordBreak: 'break-all', mb: 2 }}>\r\n          DID: {did}\r\n        </Typography>\r\n      ) : (\r\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>No DID created yet</Typography>\r\n      )}\r\n      <Button \r\n        variant=\"contained\" \r\n        onClick={handleCreateDID} \r\n        disabled={!!did || loading}\r\n      >\r\n        {loading ? 'Creating...' : 'Create DID'}\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateDID;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}