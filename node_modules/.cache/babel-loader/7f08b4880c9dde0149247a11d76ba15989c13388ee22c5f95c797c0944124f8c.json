{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\puinj\\\\OneDrive\\\\Desktop\\\\coh25\\\\decentralized-identity-ui\\\\src\\\\components\\\\IssueCredential.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport { getContract } from '../utils/contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IssueCredential = ({\n  signer\n}) => {\n  _s();\n  const [userAddress, setUserAddress] = useState('');\n  const [issuer, setIssuer] = useState('');\n  const [dataHash, setDataHash] = useState('');\n  const [expirationTimestamp, setExpirationTimestamp] = useState('');\n  const [issuerSignature, setIssuerSignature] = useState('');\n  const handleIssueCredential = async () => {\n    const contract = getContract(signer);\n    try {\n      const tx = await contract.issueCredential(userAddress, issuer, dataHash, expirationTimestamp, issuerSignature);\n      await tx.wait();\n      alert('Credential issued successfully.');\n    } catch (error) {\n      console.error('Error issuing credential:', error);\n      alert('Failed to issue credential.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"User Address\",\n      value: userAddress,\n      onChange: e => setUserAddress(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Issuer\",\n      value: issuer,\n      onChange: e => setIssuer(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Data Hash\",\n      value: dataHash,\n      onChange: e => setDataHash(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Expiration Timestamp\",\n      value: expirationTimestamp,\n      onChange: e => setExpirationTimestamp(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Issuer Signature\",\n      value: issuerSignature,\n      onChange: e => setIssuerSignature(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleIssueCredential,\n      children: \"Issue Credential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(IssueCredential, \"/17m1ZUh201+L/ZQTONIpiat3AI=\");\n_c = IssueCredential;\nexport default IssueCredential;\nvar _c;\n$RefreshReg$(_c, \"IssueCredential\");","map":{"version":3,"names":["React","useState","Button","TextField","getContract","jsxDEV","_jsxDEV","IssueCredential","signer","_s","userAddress","setUserAddress","issuer","setIssuer","dataHash","setDataHash","expirationTimestamp","setExpirationTimestamp","issuerSignature","setIssuerSignature","handleIssueCredential","contract","tx","issueCredential","wait","alert","error","console","children","label","value","onChange","e","target","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/puinj/OneDrive/Desktop/coh25/decentralized-identity-ui/src/components/IssueCredential.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { getContract } from '../utils/contract';\r\n\r\nconst IssueCredential = ({ signer }) => {\r\n  const [userAddress, setUserAddress] = useState('');\r\n  const [issuer, setIssuer] = useState('');\r\n  const [dataHash, setDataHash] = useState('');\r\n  const [expirationTimestamp, setExpirationTimestamp] = useState('');\r\n  const [issuerSignature, setIssuerSignature] = useState('');\r\n\r\n  const handleIssueCredential = async () => {\r\n    const contract = getContract(signer);\r\n    try {\r\n      const tx = await contract.issueCredential(\r\n        userAddress,\r\n        issuer,\r\n        dataHash,\r\n        expirationTimestamp,\r\n        issuerSignature\r\n      );\r\n      await tx.wait();\r\n      alert('Credential issued successfully.');\r\n    } catch (error) {\r\n      console.error('Error issuing credential:', error);\r\n      alert('Failed to issue credential.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField label=\"User Address\" value={userAddress} onChange={(e) => setUserAddress(e.target.value)} fullWidth />\r\n      <TextField label=\"Issuer\" value={issuer} onChange={(e) => setIssuer(e.target.value)} fullWidth />\r\n      <TextField label=\"Data Hash\" value={dataHash} onChange={(e) => setDataHash(e.target.value)} fullWidth />\r\n      <TextField label=\"Expiration Timestamp\" value={expirationTimestamp} onChange={(e) => setExpirationTimestamp(e.target.value)} fullWidth />\r\n      <TextField label=\"Issuer Signature\" value={issuerSignature} onChange={(e) => setIssuerSignature(e.target.value)} fullWidth />\r\n      <Button variant=\"contained\" onClick={handleIssueCredential}>Issue Credential</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueCredential;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}