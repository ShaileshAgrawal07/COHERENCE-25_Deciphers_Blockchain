{"ast":null,"code":"import { ethers } from \"ethers\";\nlet provider;\nlet signer;\nexport const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      provider = new ethers.BrowserProvider(window.ethereum);\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      signer = await provider.getSigner();\n      const address = await signer.getAddress();\n      return address;\n    } catch (err) {\n      console.error(\"User rejected connection:\", err);\n      return null;\n    }\n  } else {\n    alert(\"Please install MetaMask!\");\n    return null;\n  }\n};\nexport const getProvider = async () => {\n  if (!provider) {\n    provider = new ethers.BrowserProvider(window.ethereum);\n  }\n  return provider;\n};\nexport const getSigner = async () => {\n  if (!signer) {\n    await connectWallet();\n  }\n  return signer;\n};","map":{"version":3,"names":["ethers","provider","signer","connectWallet","window","ethereum","BrowserProvider","request","method","getSigner","address","getAddress","err","console","error","alert","getProvider"],"sources":["P:/mlsc/New folder/decentralized-identity-ui/src/web3.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\n\r\nlet provider;\r\nlet signer;\r\n\r\nexport const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      provider = new ethers.BrowserProvider(window.ethereum);\r\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      signer = await provider.getSigner();\r\n      const address = await signer.getAddress();\r\n      return address;\r\n    } catch (err) {\r\n      console.error(\"User rejected connection:\", err);\r\n      return null;\r\n    }\r\n  } else {\r\n    alert(\"Please install MetaMask!\");\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getProvider = async () => {\r\n  if (!provider) {\r\n    provider = new ethers.BrowserProvider(window.ethereum);\r\n  }\r\n  return provider;\r\n};\r\n\r\nexport const getSigner = async () => {\r\n  if (!signer) {\r\n    await connectWallet();\r\n  }\r\n  return signer;\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,IAAIC,QAAQ;AACZ,IAAIC,MAAM;AAEV,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACFJ,QAAQ,GAAG,IAAID,MAAM,CAACM,eAAe,CAACF,MAAM,CAACC,QAAQ,CAAC;MACtD,MAAMD,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChEN,MAAM,GAAG,MAAMD,QAAQ,CAACQ,SAAS,CAAC,CAAC;MACnC,MAAMC,OAAO,GAAG,MAAMR,MAAM,CAACS,UAAU,CAAC,CAAC;MACzC,OAAOD,OAAO;IAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC/C,OAAO,IAAI;IACb;EACF,CAAC,MAAM;IACLG,KAAK,CAAC,0BAA0B,CAAC;IACjC,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI,CAACf,QAAQ,EAAE;IACbA,QAAQ,GAAG,IAAID,MAAM,CAACM,eAAe,CAACF,MAAM,CAACC,QAAQ,CAAC;EACxD;EACA,OAAOJ,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI,CAACP,MAAM,EAAE;IACX,MAAMC,aAAa,CAAC,CAAC;EACvB;EACA,OAAOD,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}