{"ast":null,"code":"import { ethers } from \"ethers\";\nexport const connectWallet = async () => {\n  try {\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      const signer = await provider.getSigner();\n      return {\n        signer,\n        address: accounts[0]\n      };\n    } else {\n      alert(\"Please install Metamask!\");\n      return null;\n    }\n  } catch (err) {\n    console.error(\"Wallet connection error:\", err);\n    return null;\n  }\n};","map":{"version":3,"names":["ethers","connectWallet","window","ethereum","provider","BrowserProvider","accounts","send","signer","getSigner","address","alert","err","console","error"],"sources":["P:/mlsc/New folder/decentralized-identity-ui/src/utils/web3.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\n\r\nexport const connectWallet = async () => {\r\n  try {\r\n    if (window.ethereum) {\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n      const signer = await provider.getSigner();\r\n\r\n      return { signer, address: accounts[0] };\r\n    } else {\r\n      alert(\"Please install Metamask!\");\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Wallet connection error:\", err);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMC,QAAQ,GAAG,IAAIJ,MAAM,CAACK,eAAe,CAACH,MAAM,CAACC,QAAQ,CAAC;MAC5D,MAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/D,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,SAAS,CAAC,CAAC;MAEzC,OAAO;QAAED,MAAM;QAAEE,OAAO,EAAEJ,QAAQ,CAAC,CAAC;MAAE,CAAC;IACzC,CAAC,MAAM;MACLK,KAAK,CAAC,0BAA0B,CAAC;MACjC,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAC9C,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}